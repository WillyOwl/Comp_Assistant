version: '3.8'

services:
  # AI Composition Assistant API
  composition-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: composition-assistant-api
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - MODEL_CACHE_DIR=/app/models/cache
      - LOG_LEVEL=INFO
    volumes:
      - ./models:/app/models
      - ./configs:/app/configs
      - model_cache:/app/models/cache
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx reverse proxy for web interface
  nginx:
    image: nginx:alpine
    container_name: composition-assistant-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./web:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl  # For SSL certificates if needed
    depends_on:
      - composition-api
    restart: unless-stopped

  # Redis for caching (optional)
  redis:
    image: redis:alpine
    container_name: composition-assistant-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  model_cache:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: composition-assistant-network
